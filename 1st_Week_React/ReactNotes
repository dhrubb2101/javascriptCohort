//React is a front-end JavaScript library for building user interfaces or UI components.
//It is maintained by Facebook and a community of individual developers and companies.

//difference between framework and library
//A framework is a collection of libraries that provides a structure for building applications, while a library is a collection of pre-written code that developers can use to optimize tasks.      
//React is a library, not a framework. It is used for building user interfaces, but it does not provide a complete solution for building applications. It is often used in conjunction with other libraries and frameworks to build full-fledged applications.
//React is often used with other libraries and frameworks to build full-fledged applications, such as Redux
//A library does not have anay rules, it is just a collection of code that you can use to optimize tasks.
//A framework has rules, it provides a structure for building applications, and it often comes with its own set of libraries and tools.
//A library is unopinated, you can use it in any way you want, while a framework is opinionated, it has its own way of doing things.

//react is more of a though process than a library
//Two options that one there is js block of code in server and sent it to browser and then browser will get only a div with root id in it and then browser will run the js code and then it will render the UI
//and then js will take care of the UI updates and add accordions, buttons etc
//and another option is that we execute the js code in the server and then we send the html,css,js to the browser basically what is mentioned below
//and the page that is rendered consisting of html, css and js will be shipped to the browser directly

//so now we have two options to execute the js code 
//one in client side 
//one in server side
//we have two teams here

//so now we will use react in client side
//because react was originally designed for client side rendering
//our base desire to understand the thought process behind react
//right now we will follow the option of shipping everything on browser and then rendering it.

//mujhe browser local storage se baatt krne ke liye api deta hai 
//like mei jb bhi kahi click krta hu toh voh click event ko notify krne ke liye api deta hai
//voh api kya hai?
//it is known as OnCLick event
//api basically ek interface hai bas baat krne ke liye voh server se aaye hamesha jaruri nivoh

//API can be anything function api, event api, browser api, etc

//Chapter one - Done 

//==================================================================

//command to run index.html
//npx serve

//===================================================================
//index.html
////onclick event would work on client side not on server side because there's no
//browser to capture the event

//Okay so chapter two is done
//we learn here what is actually react, we learnt how react works in classic way
//React just gives an element namely createElement
//it is basically a method through which we created elements
//we are basically loading js and handling it in app.js

// const container = document.getElementById('root')
// const root = ReactDOM.createRoot(container)
// root.render(React.createElement(App))

//description of the above code
//then we target the root in html
//and then reactDOM takes over and create a virtual DOM ( it is just DOm which is controlled by our code)
//and then we ask the root to render the everything in the virtual DOM

//so now whenever react gets a new element it will compare the new element with the old element and update the virtual DOM
//this is what as known react's diffing algorithm
//and then it will update the real DOM with the new element

//===================================================================

// props are properties which are object basically
//props are this {}
// in Chapter three we will learn about props
// in App2.js we will learn how to use props in react
//We basically built a component called Chai which takes props and returns a div with h1 and p elements
//it is a reusuable component now
//Chapter three is done
// we learnt about props in react_02
//in src/App2.js we learnt how to use props in react
//we created a component called Chai which takes props and returns a div with h1 and

//===================================================================

//In Chapter four we will learn about state
